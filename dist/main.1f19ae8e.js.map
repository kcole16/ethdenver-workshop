{"version":3,"sources":["../node_modules/regenerator-runtime/runtime.js","config.js","main.js"],"names":["CONTRACT_NAME","getConfig","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","keyPath","masterAccount","Error","module","exports","nearConfig","window","animateClass","loadingHtml","appTitle","refreshTimeout","signedOutFlow","$","click","walletConnection","requestSignIn","renderMessages","messages","objs","i","length","push","addClass","append","text","sender","premium","empty","reverse","removeClass","refreshMessages","clearTimeout","setTimeout","document","hidden","contract","getMessages","then","catch","console","log","doSubmitMessage","val","BOATLOAD_OF_GAS","PREMIUM_COST","nearlib","utils","format","parseNearAmount","addMessage","error","submitMessage","submitPremiumMessage","signedInFlow","accountId","focus","signOut","location","replace","origin","pathname","keypress","e","which","preventDefault","init","connect","Object","assign","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","near","toString","WalletConnection","getAccountId","Contract","account","viewMethods","changeMethods","attr","html","isSignedIn"],"mappings":"AAAA,ACAA,IAAMA,aAAa,GAAG,uBAA4B,UAAlD;ADCA,ACD8D;ADE9D,AEFA;AFGA,ACDA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;ADExB,ACDI,ACFJ,UDEYA,GAAR;ADEJ,ACAI,SAAK,YAAL;ADCJ,ACAI,SAAK,aAAL;ADCJ,ACAQ,aAAO;ADCf,ACAYC,QAAAA,SAAS,EAAE,SADR;ADEf,ACAYC,QAAAA,OAAO,EAAE,8BAFN;ADGf,ACAYC,QAAAA,YAAY,EAAEL,aAHX;ADIf,ACAYM,QAAAA,SAAS,EAAE,iCAJR;ADKf,ACAYC,ACTZ,IAAIM,IDSQN,MCTE,GDSO,ACTJ,EDSM,mBCTI,iBAAwB,aAAlC,CAAjB;AFUA,ACNe,ACHfO,MAAM,CDGE,ACHDD,UAAP,GAAoBA,UAApB,EAEA;AFQA;AACA,ACDI,ACPJ,IAAME,KDOG,OCPS,EDOd,CCPiB,2BAArB;AFSA,ACDQ,ACPR,IAAMC,SDOS,ECPE,GAAG,qFAApB;AFSA,ACDYb,ACPZ,IAAMc,IDOMd,ICPE,GAAG,EDOI,EAAE,SADR,ICNf,EAEA;AFOA,ACDYC,QAAAA,OAAO,EAAE,uCAFN;ADIf,ACDYC,ACNZ,IAAIa,IDMQb,UCNZ,EDMwB,ACJxB,EDI0BL,aAHX;ADKf,ACDYM,QAAAA,SAAS,EAAE,0CAJR;ADMf,ACDYC,ACLZ,QDKYA,CCLHY,QDKY,EAAE,GCLvB,GAAyB;AFOzB,ACPe,ACCbC,EAAAA,CAAC,CAAC,GDDI,YCCL,CAAD,CAAmBC,KAAnB,CAAyB,YAAM;AFOjC,AENIC,IAAAA,gBAAgB,CAACC,aAAjB,EACE;AFMN,ACFI,ACHET,IAAAA,KDGG,CCHG,CAACD,KDGT,KCHE,CAAkBR,YAFpB,EAGEY,QAHF,CAIE;AFIN,ACFQ,ACDF,aDCS;ADGf,ACFYd,ACPR,QDOQA,SAAS,EAAE,OADR;ADIf,ACFYC,ACDT,GARD,KDSUA,OAAO,EAAE,uBAFN;ADKf,ACFYI,ACDX,EAGD,MDFYA,OAAO,8DAHJ;ADMf,ACFYF,QAAAA,SAAS,EAAE,8BAJR;ADOf,ACFYD,QAAAA,YAAY,EAAEL;ADG1B,ACRe,ACMf,ODNQ,ECMCwB,cAAT,CA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":"main.1f19ae8e.js","sourceRoot":"../src","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","const CONTRACT_NAME = process.env.CONTRACT_NAME ||'testdenv'; /* TODO: fill this in! */\n\nfunction getConfig(env) {\n    switch (env) {\n\n    case 'production':\n    case 'development':\n        return {\n            networkId: 'default',\n            nodeUrl: 'https://rpc.nearprotocol.com',\n            contractName: CONTRACT_NAME,\n            walletUrl: 'https://wallet.nearprotocol.com',\n            helperUrl: 'https://near-contract-helper.onrender.com',\n        };\n    case 'staging':\n        return {\n            networkId: 'staging',\n            nodeUrl: 'https://staging-rpc.nearprotocol.com/',\n            contractName: CONTRACT_NAME,\n            walletUrl: 'https://near-wallet-staging.onrender.com',\n            helperUrl: 'https://near-contract-helper-staging.onrender.com',\n        };\n    case 'local':\n        return {\n            networkId: 'local',\n            nodeUrl: 'http://localhost:3030',\n            keyPath: `${process.env.HOME}/.near/validator_key.json`,\n            walletUrl: 'http://localhost:4000/wallet',\n            contractName: CONTRACT_NAME,\n        };\n    case 'test':\n    case 'ci':\n        return {\n            networkId: 'shared-test',\n            nodeUrl: 'http://shared-test.nearprotocol.com:3030',\n            contractName: CONTRACT_NAME,\n            masterAccount: 'test.near',\n        };\n    case 'ci-staging':\n        return {\n            networkId: 'shared-test-staging',\n            nodeUrl: 'http://staging-shared-test.nearprotocol.com:3030',\n            contractName: CONTRACT_NAME,\n            masterAccount: 'test.near',\n        };\n    case 'tatooine':\n        return {\n            networkId: 'tatooine',\n            nodeUrl: 'https://rpc.tatooine.nearprotocol.com',\n            contractName: CONTRACT_NAME,\n            walletUrl: 'https://wallet.tatooine.nearprotocol.com',\n        };\n    default:\n        throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`);\n    }\n}\n\nmodule.exports = getConfig;\n","import \"regenerator-runtime/runtime\";\nimport getConfig from \"./config\"\n\nlet nearConfig = getConfig(process.env.NODE_ENV || \"development\");\nwindow.nearConfig = nearConfig;\n\n// Defining some global constants\nconst animateClass = 'glyphicon-refresh-animate';\nconst loadingHtml = '<span class=\"glyphicon glyphicon-refresh glyphicon-refresh-animate\"></span> Loading';\nconst appTitle = 'NEAR Guest Book';\n\n// Defining global variables that we initialize asynchronously later.\nlet refreshTimeout;\n\n// Function that initializes the signIn button using walletConnection\nfunction signedOutFlow() {\n  $('#login-button').click(() => {\n    walletConnection.requestSignIn(\n      // The contract name that would be authorized to be called by the user's account.\n      window.nearConfig.contractName,\n      appTitle\n      // We can also provide URLs to redirect on success and failure.\n      // The current URL is used by default.\n    );\n  });\n}\n\n\n// Renders given array of messages\nfunction renderMessages(messages) {\n  let objs = [];\n  for (let i = 0; i < messages.length; ++i) {\n    objs.push(\n      $('<div/>').addClass('row').append([\n        $('<div/>').addClass('col-sm-3').append(\n          $('<strong/>').text(messages[i].sender)\n        ),\n        $('<div/>')\n          .addClass('col-sm-9')\n          .addClass('message-text')\n          .addClass(messages[i].premium ? 'premium' : '')\n          .text(messages[i].text),\n      ])\n    );\n  }\n  $('#messages').empty().append(objs.reverse());\n  $('#refresh-span').removeClass(animateClass);\n}\n\n// Calls view function on the contract and sets up timeout to be called again in 5 seconds\n// It only calls the contract if the this page/tab is active.\nfunction refreshMessages() {\n  // If we already have a timeout scheduled, cancel it\n  if (refreshTimeout) {\n    clearTimeout(refreshTimeout);\n    refreshTimeout = null;\n  }\n  // Schedules a new timeout\n  refreshTimeout = setTimeout(refreshMessages, 5000);\n  // Checking if the page is not active and exits without requesting messages from the chain\n  // to avoid unnecessary queries to the devnet.\n  if (document.hidden) {\n    return;\n  }\n  // Adding animation UI\n  $('#refresh-span').addClass(animateClass);\n  // Calling the contract to read messages which makes a call to devnet.\n  // The read call works even if the Account ID is not provided.\n  contract.getMessages({})\n    .then(renderMessages)\n    .catch(console.log);\n}\n\n// Submits a new message\nfunction doSubmitMessage(premium = false) {\n  let text = $('#text-message').val();\n  $('#text-message').val('');\n  // Calls the addMessage on the contract with arguments {text=text}.\n  // TODO: Refactor gas/amount args to be named\n  const BOATLOAD_OF_GAS = '10000000000000000';\n  const PREMIUM_COST = nearlib.utils.format.parseNearAmount('0.1');\n  contract.addMessage({text}, BOATLOAD_OF_GAS, premium ? PREMIUM_COST : '0')\n    .then(() => {\n      // Starting refresh animation\n      $('#refresh-span').addClass(animateClass);\n      refreshMessages();\n    })\n    .catch(console.error);\n}\n\nfunction submitMessage() {\n  doSubmitMessage();\n}\n\nfunction submitPremiumMessage() {\n  doSubmitMessage(true);\n}\n\n// Main function for the signed-in flow (already authorized by the wallet).\nfunction signedInFlow() {\n  // Hiding sign-in html parts and showing post message things\n  $('#sign-in-container').addClass('hidden');\n  $('#guest-book-container').removeClass('hidden');\n  $('#logout-option').removeClass('hidden');\n\n  // Displaying the accountId\n  $('.account-id').text(window.accountId);\n\n  // Focusing on the enter message field.\n  $('#text-message').focus();\n\n  // Adding handling for logging out\n  $('#logout-button').click(() => {\n    // It removes the auth token from the local storage.\n    walletConnection.signOut();\n    // Forcing redirect.\n    window.location.replace(window.location.origin + window.location.pathname);\n  });\n\n  // Enablid enter key to send messages as well.\n  $('#text-message').keypress(function (e) {\n    if (e.which == 13) {\n      e.preventDefault();\n      submitMessage();\n      return false;\n    }\n  });\n\n  // Post button to send messages\n  $('#submit-tx-button').click(submitMessage);\n  // Post button to send premium messages\n  $('#submit-premium-button').click(submitPremiumMessage);\n}\n\n// Initialization code\nasync function init() {\n  //nearConfig.walletUrl = \"http://localhost:1234\"\n  nearConfig.walletUrl = 'https://wallet.nearprotocol.com'\n  console.log('nearConfig', nearConfig);\n\n  // Initializing connection to the NEAR DevNet.\n  window.near = await nearlib.connect(Object.assign({ deps: { keyStore: new nearlib.keyStores.BrowserLocalStorageKeyStore() } }, nearConfig));\n\n  // Initializing Wallet based Account. It can work with NEAR DevNet wallet that\n  // is hosted at https://wallet.nearprotocol.com\n  console.log('location', window.location.toString());\n  window.walletConnection = new nearlib.WalletConnection(window.near);\n\n  // Getting the Account ID. If unauthorized yet, it's just empty string.\n  window.accountId = walletConnection.getAccountId();\n\n  // Initializing the contract.\n  // For now we need to specify method names from the contract manually.\n  // It also takes the Account ID which it would use for signing transactions.\n   window.contract = new nearlib.Contract(walletConnection.account(), nearConfig.contractName, {\n    viewMethods: ['getMessages'],\n    changeMethods: ['addMessage'],\n    sender: window.accountId,\n  });\n\n  // Enable wallet link now that config is available\n  $('a.wallet').removeClass('disabled').attr('href', nearConfig.walletUrl);\n\n  // Initializing messages and starting auto-refreshing.\n  $('#messages').html(loadingHtml);\n  $('#refresh-button').click(refreshMessages);\n  refreshMessages();\n\n  // Based on whether you've authorized, checking which flow we should go.\n  if (!walletConnection.isSignedIn()) {\n    signedOutFlow();\n  } else {\n    signedInFlow();\n  }\n}\n\ninit().catch(console.error);"]}